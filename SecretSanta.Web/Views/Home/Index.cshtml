@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Skinner Secret Santa</title>
    <meta charset="utf-8">
    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <link href="~/Content/bootstrap-grid.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-reboot.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/declaritive-styles.css" rel="stylesheet" />
    <link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>
    <link href="~/Content/iziToast.min.css" rel="stylesheet" />

    <script src="~/Content/jquery-3.5.1.min.js"></script>
    <script src="~/Content/moment.min.js"></script>
    <script src="~/Content/popper.min.js"></script>
    <script src="~/Content/bootstrap.min.js"></script>
    <script src="~/Content/vue-master.js"></script>
    <script src="~/Content/app.js"></script>
    <script src="~/Content/iziToast.min.js"></script>

    <style>
        h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6, p, label, input, div, span, a, select, option {
            font-family: 'Montserrat', 'Avenir', serif !important;
        }

        html, body {
            overflow-x: hidden;
            font-family: 'Montserrat', 'Avenir', serif !important;
        }
    </style>
</head>
<body>
<div id="secret-santa-module" class="container-fluid">
    <div class="row mt-4">
        <div class="col-12 text-center">
            <h3 class="text-primary">Skinner Secret Santa</h3>
        </div>
    </div>
    <template v-if="member == null">
        <div class="row mt-4">
            <div class="col-12 text-center">
                <p class="m-0">Email:</p>
                <input type="email" v-model="email" minlength="3" maxlength="256" @@keyup.enter="login()" />
            </div>
            <div class="col-12 mt-2 text-center">
                <button type="button" class="btn btn-primary btn-sm" @@click="login()">Submit</button>
            </div>
        </div>
    </template>
    <template v-else>
        <div class="row justify-content-center">
            <div class="col-12 col-md-6 col-xl-6">
                <h4 class="m-0 text-center">Hi {{member.Member.Name}}</h4>
                <p class="m-0" class="text-center">Fill out your 2020 Skinner Secret Santa information below.</p>
            </div>
        </div>
        <div class="row justify-content-center mt-3">
            <div class="col-12 col-md-6 col-xl-6">
                <p class="m-0">Shirt Size:</p>
                <input type="text" class="form-control" v-model="member.GiftList.ShirtSize" />
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-12 col-md-6 col-xl-6">
                <p class="m-0">Pant Size:</p>
                <input type="text" class="form-control" v-model="member.GiftList.PantSize" />
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-12 col-md-6 col-xl-6">
                <p class="m-0">Shoe Size:</p>
                <input type="text" class="form-control" v-model="member.GiftList.ShoeSize" />
            </div>
        </div>
        <div class="row justify-content-center mt-3">
            <div class="col-12 col-md-6 col-xl-6">
                <p class="m-0">Christmas List:</p>
                <table class="table table-condensed">
                    <tr>
                        <td>
                            <p class="m-0">Product: <em class="small text-danger">(required)</em></p>
                            <input type="text" class="form-control" v-model="tempRequest.Name" />
                        </td>
                        <td>
                            <p class="m-0">Size/Color/etc: <em class="small text-muted">(optional)</em></p>
                            <input type="text" class="form-control" v-model="tempRequest.Description" />
                        </td>
                        <td>
                            <p class="m-0">Link: <em class="small text-muted">(optional)</em></p>
                            <input type="text" class="form-control" v-model="tempRequest.Url" />
                        </td>
                        <td class="text-right">
                            <button type="button" class="btn btn-primary btn-sm mt-4" @@click="addRequest()" :disabled="tempRequest.Name == null || tempRequest.Name.length < 3">Add</button>
                        </td>
                    </tr>
                </table>
                <table class="table table-sm" v-if="member.GiftList.FavoriteThings.length > 0">
                    <tr v-for="request in member.GiftList.FavoriteThings">
                        <td>
                            <p class="m-0">{{request.Name}}</p>
                        </td>
                        <td>
                            <p class="m-0">{{request.Description}}</p>
                        </td>
                        <td>
                            <a class="m-0" :href="request.Url">{{request.Url}}</a>
                        </td>
                        <td class="text-right">
                            <button type="button" class="btn btn-danger btn-sm" @@click="removeRequest(request)">Remove</button>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="row justify-content-center mt-3" >
            <div class="col-12 col-md-6 col-xl-6">
                <p class="m-0">Do <strong>not</strong> want:</p>
                <div class="input-group">
                    <input type="text" class="form-control" v-model="tempVeto" style="height: 31px;"/>
                    <div class="input-group-append">
                        <div class="input-group-btn">
                            <button type="button" class="btn btn-primary btn-sm" @@click="addVeto()" :disabled="tempVeto == null || tempVeto.length < 3">Add</button>
                        </div>
                    </div>
                </div>
                <div class="list-group p-1">
                    <table class="table table-condensed" v-if="member.GiftList.DoNotBuy.length > 0">
                        <tr v-for="veto in member.GiftList.DoNotBuy">
                            <td>
                                <p class="m-0">{{veto}}</p>
                            </td>
                            <td class="text-right">
                                <button type="button" class="btn btn-danger btn-sm" @@click="removeVeto(veto)">Remove</button>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="row justify-content-center mt-3">
            <div class="col-12 col-md-6 col-xl-6">
                <p class="m-0">Spouse Suggestion:</p>
                <table class="table table-condensed">
                    <tr>
                        <td>
                            <p class="m-0">Product: <em class="small text-danger">(required)</em></p>
                            <input type="text" class="form-control" v-model="tempSpouse.Name" />
                        </td>
                        <td>
                            <p class="m-0">Size/Color/etc: <em class="small text-muted">(optional)</em></p>
                            <input type="text" class="form-control" v-model="tempSpouse.Description" />
                        </td>
                        <td>
                            <p class="m-0">Link: <em class="small text-muted">(optional)</em></p>
                            <input type="text" class="form-control" v-model="tempSpouse.Url" />
                        </td>
                        <td class="text-right">
                            <button type="button" class="btn btn-primary btn-sm mt-4" @@click="addSpouse()" :disabled="tempSpouse.Name == null || tempSpouse.Name.length < 3">Add</button>
                        </td>
                    </tr>
                </table>
                <table class="table table-condensed" v-if="member.GiftList.SpouseSuggestion.length > 0">
                    <tr v-for="request in member.GiftList.SpouseSuggestion">
                        <td>
                            <p class="m-0">{{request.Name}}</p>
                        </td>
                        <td>
                            <p class="m-0">{{request.Description}}</p>
                        </td>
                        <td>
                            <a class="m-0" :href="request.Url">{{request.Url}}</a>
                        </td>
                        <td class="text-right">
                            <button type="button" class="btn btn-danger btn-sm" @@click="removeSpouse(request)">Remove</button>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-12 text-center">
                <button type="button" class="btn btn-primary" @@click="save()">Save</button>
            </div>
        </div>
    </template>
</div>
<script>
    var baseUrl = 'http://localhost/SecretSanta/';
    function ShowErrorAlert(msg) {
        iziToast.error({
            title: 'Error',
            message: msg,
            position: 'topCenter',
            timeout: 2500
        });
    };
    function ShowInfoAlert(msg) {
        iziToast.info({
            title: '',
            message: msg,
            position: 'topCenter',
            timeout: 2500
        });
    };
    var module = new Vue({
        el: '#secret-santa-module',
        data: {
            email: '',
            member: null,
            tempRequest: {
                Name: '',
                Description: '',
                Url: '',
            },
            tempSpouse: {
                Name: '',
                Description: '',
                Url: '',
            },
            tempVeto: '',
        },
        created: function () { },
        mounted: function() {
            this.services = {
                login: function(email) {
                    return axios({
                        method: 'post',
                        url: baseUrl + 'login',
                        data: {
                            email: email
                        },
                        headers: {
                            //'RequestVerificationToken': that.antiForgeryToken
                        }
                    });
                },
                save: function (model) {
                    return axios({
                        method: 'post',
                        url: baseUrl + 'save',
                        data: {
                            model: model
                        },
                        headers: {
                            //'RequestVerificationToken': that.antiForgeryToken
                        }
                    });
                },
            };
        },
        methods: {
            login: function () {
                var that = this;
                if (this.email == null || this.email.length <= 3) {
                    ShowErrorAlert("Please enter a valid email");
                    return;
                }
                this.services.login(this.email).then(function(response) {
                    console.log(response.data);
                    that.member = response.data;
                }).catch(function(err) {
                    ShowErrorAlert("That email is not available for secret santa");
                });
            },
            addRequest: function () {
                this.member.GiftList.FavoriteThings.push(this.tempRequest);
                this.tempRequest = {
                    Name: '',
                    Description: '',
                    Url: '',
                };
            },
            removeRequest: function(req) {
                for (var i = this.member.GiftList.FavoriteThings.length - 1; i >= 0; i--) {
                    if (this.member.GiftList.FavoriteThings[i].Name == req.Name && this.member.GiftList.FavoriteThings[i].Description == req.Description && this.member.GiftList.FavoriteThings[i].Url == req.Url) {
                        this.member.GiftList.FavoriteThings.splice(i, 1);
                        i = -1;
                    }
                }
            },
            addSpouse: function () {
                this.member.GiftList.SpouseSuggestion.push(this.tempSpouse);
                this.tempSpouse = {
                    Name: '',
                    Description: '',
                    Url: '',
                };
            },
            removeSpouse: function (req) {
                for (var i = this.member.GiftList.SpouseSuggestion.length - 1; i >= 0; i--) {
                    if (this.member.GiftList.SpouseSuggestion[i].Name == req.Name && this.member.GiftList.SpouseSuggestion[i].Description == req.Description && this.member.GiftList.SpouseSuggestion[i].Url == req.Url) {
                        this.member.GiftList.SpouseSuggestion.splice(i, 1);
                        i = -1;
                    }
                }
            },
            addVeto: function() {
                this.member.GiftList.DoNotBuy.push(this.tempVeto);
                this.tempVeto = '';
            },
            removeVeto: function(veto) {
                for (var i = this.member.GiftList.DoNotBuy.length - 1; i >= 0; i--) {
                    if (this.member.GiftList.DoNotBuy[i] == veto) {
                        this.member.GiftList.DoNotBuy.splice(i, 1);
                        i = -1;
                    }
                }
            },
            save: function() {
                this.services.save(this.member.GiftList).then(function (response) {
                    iziToast.success({
                        title: '',
                        message: 'Success!',
                        position: 'topCenter',
                        timeout: 2500
                    });
                }).catch(function (err) {
                    ShowErrorAlert("Error saving your information! You should probably let Mike know.");
                });
            }
        }
    });
</script>
</body>
</html>
